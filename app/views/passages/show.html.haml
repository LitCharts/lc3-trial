%p#notice= notice

%h1= @passage.book.title
%h2= @passage.book.author
#highlightable-content
  %p= @passage.content.html_safe

= link_to 'Edit', edit_passage_path(@passage)
\|
= link_to 'Back', passages_path

:javascript
  $(function() {
    const passageId = window.location.pathname.split('/').pop();
    const html = "<div id='highlight-buttons' class='btn-group' role='group'><button type='button' class='btn highlight-btn'><span class='glyphicon glyphicon-pencil highlight-btn'/></button><button type='button' class='btn btn-secondary note-btn'><span class='glyphicon glyphicon-comment'/></button></div>";
    rangy.init();
    passageHighlights = new PassageHighlights(passageId);

    // apparently there is a race condition going on due to `tooltip('show')` returning to the caller
    // _before_ the highlight span is rendered in the DOM.
    // I tried overriding a few different bootstrap methods but no dice
    // https://stackoverflow.com/questions/29725157/bootstrap-tooltip-disappears-after-second-show
    highlightApplier = rangy.createClassApplier("highlight", {
      elementAttributes: { 'data-delay': "{'show': '500', 'hide': '500' }", 'data-toggle': 'tooltip', 'data-placement': 'top', 'data-html': true, 'title': html },
      onElementCreate: function(element) {
        $(element).tooltip({trigger: 'manual'});
        setTimeout( function() {
          $(element).tooltip('show');
        }, 10 );
      }
    });

    window.onload = function() {
      passageHighlights.fetchHighlightsForPassage().then( function(data) {
        for(let i = 0; i < data.length; i++) {
          var highlight = new Highlight(data[i]);
          passageHighlights.highlights.push(highlight);
          var range   = highlight.highlightedElementRange($('#highlightable-content')[0]);
          var applier = highlight.highlightApplier();
          applier.applyToRange(range);
        }
      }, function(reason) {
        console.log('Failed to load highlights');
      })
    }

    $(document).on('click', function() {
      $('.tooltip').tooltip('toggle');
      highlightApplier.toggleSelection();
    });

    $(document).on('click', '.highlight-btn', function(event) {
      event.stopPropagation();
      var selection = rangy.getSelection()
      var range = selection.getRangeAt(0);

      var highlight = new Highlight({
        offset: PassageHighlights.serialize(range.toCharacterRange($('#highlightable-content')[0])),
        text: selection.focusNode.data,
        passage_id: passageId
      })

      highlight.save().then( function(data) {
        highlight.id = data.id;
        passageHighlights.highlights.push(highlight);
        highlight.highlightApplier().toggleSelection();
      });
      $('.tooltip').tooltip('hide');
    });

    $(document).on('click', '.dehighlight-btn', function(event) {
      event.stopPropagation();

      var id = $(event.target).closest('[highlight-id]').attr('highlight-id');
      var highlight = passageHighlights.findHighlight(id);
      highlight.destroy().then( (data) => {
        var applier = highlight.highlightApplier();
        var range = highlight.highlightedElementRange($('#highlightable-content')[0]);
        $(highlight.element).tooltip('hide');
        applier.undoToRange(range);
      })
      $('.tooltip').tooltip('hide');
    });
  });